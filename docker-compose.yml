services:
  influxdb:
    image: influxdb:2.7
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
      - ./influxdb/tasks:/etc/influxdb2 # mount tasks for init container
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=home-net
      - DOCKER_INFLUXDB_INIT_BUCKET=network_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=supersecrettoken
    ports:
      - "8086:8086"

#  influx-init:
#    image: influxdb:2.7
#    depends_on:
#      influxdb:
#        condition: service_healthy
#    volumes:
#      - ./influxdb/tasks:/tasks:ro
#    entrypoint: >
#      /bin/sh -c "influx task list --name downsample_bandwidth_15m --token $INFLUX_TOKEN || influx task create --file /tasks/bandwidth_downsample.flux --token $INFLUX_TOKEN; echo 'InfluxDB downsampling task ensured'"
#    environment:
#      - INFLUX_TOKEN=${INFLUX_TOKEN}
#      - INFLUXD_URL=http://influxdb:8086

  grafana:
    image: grafana/grafana:10.3.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - influxdb

  poller:
    build: ./poller
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/refresh-now"]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: poller
    volumes:
      - ./config:/app/config
      - ./data/sqlite:/app/sqlite
    depends_on:
      - influxdb
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
